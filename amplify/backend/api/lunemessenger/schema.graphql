# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules
# input AMPLIFY { globalAuthRule: AuthRule = { allow: public } } # FOR TESTING ONLY!

type User
@model
@auth(
  rules: [
    { allow: owner, operations: [create, read, update, delete] }
    { allow: private, operations: [read] }
  ]
) {
  id: ID!
  name: String!
  imageUri: String
  status: String
  #chatRoomUser: [ChatRoomUser] @connection(keyName: "byUser", fields: ["id"])
  chatRoomUser: [ChatRoomUser] @hasMany(indexName: "byUser", fields: ["id"])
}

type ChatRoomUser
@model
#@key(name: "byUser", fields: ["userID", "chatRoomID"])
#@key(name: "byChatRoom", fields: ["chatRoomID", "userID"])
@auth(
  rules: [
    { allow: owner, operations: [create, read, update, delete] }
    { allow: private, operations: [read] }
  ]
) {
  id: ID!
  userID: ID! @index(name: "byUser", sortKeyFields: ["chatRoomID"])
  chatRoomID: ID! @index(name: "byChatRoom", sortKeyFields: ["userID"])
  user: User @hasOne(fields: ["userID"])
  chatRoom: ChatRoom @hasOne(fields: ["chatRoomID"])
}

type ChatRoom
@model
@auth(
  rules: [
    { allow: owner, operations: [create, read, update, delete] }
    { allow: private, operations: [read] }
  ]
) {
  id: ID!
  #chatRoomUsers: [ChatRoomUser] @connection(keyName: "byChatRoom", fields: ["id"])
  chatRoomUsers: [ChatRoomUser] @hasMany(indexName: "byChatRoom", fields: ["id"])
  # list of messages
}
